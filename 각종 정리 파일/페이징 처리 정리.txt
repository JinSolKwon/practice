totalBoardCount	: 전체 게시글 수					
boardListCount	: 한 페이지에서 보여줄 게시글 수			
totalPage		: 전체 페이지 수					
currentPage	: 현재 페이지 수					
pageCount 	: 화면 하단에 보여줄 페이지 수(1~10 or 1~5 등등)	
startPage 	: 페이지 시작번호					
endPage		: 페이지 끝번호
startRnum	: rownum 시작
endRnum 	: rownum 끝					

1. 전체 게시글 수를 가져온다 : count(*) : totalBoardCount

2. 한 페이지당 보여줄 게시글 수를 지정 : ex)10개 20개 등등 : boardListCount

3. 전체 페이지 수를 계산한다 : totalPage = totalBoardCount / boardListCount 
 - 나누어 떨어지지 않을 경우 페이지가 하나씩 늘어나야됨
 - if(totalBoardCount % boardListCount > 0) { totalPage++; }
 - url에서 임의로 page수를 바꿀 수 있으므로 총 페이지 수 보다 높은 페이지를 접근하지 못하게 예방
   if(totalPage < currentPage) { currentPage) = totalPage };

4. 하단에 페이지 번호들을 몇 개 보여줄지 지정 : ex) pageCount == 10 >> 1~10페이지 / 11~20페이지

5. 하단에 보여지는 시작페이지와 끝 페이지를 계산
 - startPage = ((currentPage) -1) / pageCount) * pageCount + 1;
   현재 페이지가 pageCount와 같을 때를 유의하며 (currentPage - 1)을 하고 +1은 첫페이지가 0이나 10이아니라 1이나 11로 하기위함
 - endPage= startPage + pageCount - 1;
   -1은 첫페이지가 1이나 11등과 같을 때 1~10, 11~20으로 지정하기 위함

6. 5번과 같이 endPage계산하면 totalPage보다 endPage이 클 수 있으므로 그것을 처리해야됨
 - if(endPage > totalPage) { endPage = totalPage };

7. 현재 페이지(currentPage)를 가지고 시작 페이지와 끝 페이지를 동적 계산하도록 변경되었으므로 현재 페이지를 자유롭게
   옮겨다닐 수 있도록 [처음][이전] 1 2 3 ... 10 [다음][끝] 링크를 만듦
 - 단순히 처음, 끝은 currentPage = 1, currentPage = totalPage로 링크시키면 됨
 - 이전, 다음은 currentPage - 1, currentPage + 1로 링크시키면 됨
 - 이전, 다음으로 다음 startPage, endPage 구조로 넘어가게 할 수 있음 >> currentPage = startPage - 1 || currentPage = endPage +1 하면 됨

8. rownum에 사용할 startRnum, endRnum계산
ex!!!!
page	startRnum	endRnum
  1	     1		   10
  2	    11		   20
  3	    21		   30
  ...	     ...		    ...

 - startRnum = (currentPage - 1) * pageCount + 1
 - endRnum = currentPage * pageCount

쿼리문!!!
사전조건 : board테이블 : id, name, content, regdate만 있음

1. board테이블에 있는 값들을 날짜별로 정렬하여 가져온다. 

select rownum as rnum, A.id, A.name, A.content, A.regdate
from (
    select id, name, content, regdate
    from board
    order by regdate desc ) A

2. rownum과 between함수를 사용해 원하는 양만큼 값을 가져온다.
rownum : DB에서 값을 가져올 때 값들의 순번을 1부터 중복과 빠짐없이 차례로 매긴다

select rownum as rnum, A.id, A.name, A.content, A.regdate
from (
    select id, name, content, regdate
    from board
    order by regdate desc ) A
where rownum between #{startRnum} and #{endRnum}

이렇게 처리할 경우 저장된 값들의 양이 많다면 모든 값들의 rownum을 붙이기 때문에 비효율적일 수 있다.
이것을 쿼리문을 나눠서 표현하여 효율성을 높이는 방법을 사용할 수 있다.

3. 옵티마이저 사용
select B.rum, B.id, B.name, B.content, B.regdate
from
    (select rownum as rnum, A.id, A.name, A.content, A.regdate
    from (
        select id, name, content, regdate
        from board
        order by regdate desc ) A
    where rownum <= #{endRnum} ) B
where B.rnum >= #{startRnum}

맨 처음 endRnum까지 rownum을 붙이고 그 이후에는 붙일 필요가 없기때문에 endRnum이후로는 작업을 중단한다.
이후 startRnum으로 범위를 지정하여 값을 가져온다.


























